# 引入两个库，主要靠win32com修改格式
import os
import win32com
import time

# 操作word程序
def main():
    path = r'C:\Users\Administrator\Desktop\整理'
    start_t = time.time()

    xunhuan(path)

    print('************************')
    print('处理完毕')
    end_t = time.time()
    print('花费时间：', end_t - start_t)

# 主体循环
def xunhuan(path):

    count_num = 0  # 计数，显示处理进度
    root, files_list = docu_file(path)

    for filename in files_list:
        name = os.path.join(root, filename)  # 合成文档名
        print('打开中：', filename)

        doc_change(name,filename)

        count_num += 1
        if count_num % 10 == 0:
            print('处理个数：{}'.format(count_num))
            print()

# 文件夹内容
def docu_file(path):

    for root, a, files_list in os.walk(path):  # os.walk 函数好麻烦；循环操作所有文件
        print('文件个数：', len(files_list))
        print()

    return root, files_list

# 修改文档
def doc_change(name, filename):

    # 准备打开word
    from win32com.client import Dispatch, constants
    w = win32com.client.Dispatch('Word.Application')

    # 不知道是干什么的，但是别人的都写了
    w.Visible = 0
    w.DisplayAlerts = 0

    doc = w.Documents.Open(FileName=name)  # 正式打开文档，用doc接收

    # 选中全文，修改全文格式
    w.ActiveDocument.Select()
    w.Selection.ClearFormatting()
    w.Selection.Font.Name = '仿宋体'
    w.Selection.Font.Size = '16'

    # 删除空行，复制粘贴的；空行仍然占一个字符
    for earch_para in w.ActiveDocument.Paragraphs:
        if earch_para.Range.Words.Count == 1:
            earch_para.Range.Delete()

    # 用段落顺序循环，修改标题（第一段）之后的格式，并首行缩进
    for i in range(2, doc.Paragraphs.count + 1):
        para_n = doc.Paragraphs(i).Range
        para_n.ParagraphFormat.FirstLineIndent = 30  # 首行缩进，试了好几次

    # 修改标题(第一段)格式
    par1 = doc.Paragraphs(1).Range
    par1.Font.Name = "方正小标宋简体"
    par1.Font.Size = '22'
    par1.ParagraphFormat.Alignment = 1  # 居中

    # 根据段落字符的数量，判断是不是一级标题，不准确
    for i in range(3, doc.Paragraphs.count):
        para_title = doc.Paragraphs(i).Range
        if para_title.Words.Count < 20:
            para_title.Font.Name = '黑体'
            para_title.Font.Size = '16'

    # 关闭当前文档
    doc.Close()
    # 给出处理进程反馈
    print('已处理：', filename)

    w.Quit()

if __name__ == '__main__':
    main()
